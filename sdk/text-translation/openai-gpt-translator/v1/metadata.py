from enum import Enum
from typing import Optional

from pydantic import Field

from hyko_sdk.function import SDKFunction
from hyko_sdk.metadata import CoreModel

func = SDKFunction(
    description="OpenAI GPT Translation models (API)",
)


class SelectedModel(str, Enum):
    GPT_3_5 = "gpt-3.5-turbo"
    GPT_3_5_16K = "gpt-3.5-turbo-16k"
    GPT_4 = "gpt-4"
    GPT_4_32K = "gpt-4-32k"


@func.set_input
class Inputs(CoreModel):
    original_text: str = Field(..., description="The text to be translated")


@func.set_param
class Params(CoreModel):
    model: SelectedModel = Field(
        ..., description="Model variant to be used for summarization"
    )
    api_key: str = Field(..., description="OpenAI API KEY")
    language: str = Field(
        default="French", description="Target language to translate to"
    )
    max_tokens: Optional[int] = Field(
        default=None, description="Maximum number of tokens generated by the model"
    )
    temperature: Optional[float] = Field(default=None, description="Model temperature")
    top_p: Optional[float] = Field(default=None, description="Model Top P")


@func.set_output
class Outputs(CoreModel):
    translated_text: str = Field(..., description="Translated text")
